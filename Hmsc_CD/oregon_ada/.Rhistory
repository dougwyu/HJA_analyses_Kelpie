mtext("Cumulative number of specimens", side = 2, line = 5)
labels <- format(seq(10000, 150000, 20000), big.mark = ",", scientific = FALSE)
axis(side = 2, at = seq(10000, 150000, 20000), labels = labels, las=1)
text(x = sp$Acquisition, y = sp$Cumulative, sp$Collector, cex = 0.7, pos = 2)
segments(x0 = sp$Acquisition, y0 = 0, y1 = sp$cumulag, lwd = lwd, col = "grey30")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "darkred")
dev.off()
png("D:/Diana/Entomologia Manchester Museum/Spiders/collectors.png", width = 210, height = 100, units = "mm", res = 100)
par(mar = c(5, 6, 1, 1), mgp= c(3, 1,0))
plot(sp$Acquisition, sp$Cumulative, type = "h", lwd = lwd, xlab = "Year of acquisition", ylab = "", las = 1, yaxt= "n", xlim = c(1900, 2020), col = "brown1")
mtext("Cumulative number of specimens", side = 2, line = 5)
labels <- format(seq(10000, 150000, 20000), big.mark = ",", scientific = FALSE)
axis(side = 2, at = seq(10000, 150000, 20000), labels = labels, las=1)
text(x = sp$Acquisition, y = sp$Cumulative, sp$Collector, cex = 0.7, pos = 2)
segments(x0 = sp$Acquisition, y0 = 0, y1 = sp$cumulag, lwd = lwd, col = "grey30")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "firebrick")
dev.off()
#Bar plot
# from: tablas para publicacion Historia collectioncollect
sp <- read.table("clipboard", header = T, sep = "\t")
str(sp)
## cumulative
lwd<-6
par(mar = c(5, 6, 1, 1), mgp= c(3, 1,0))
plot(sp$Acquisition, sp$Cumulative, type = "h", lwd = lwd, xlab = "Year of acquisition", ylab = "", las = 1, yaxt= "n", xlim = c(1900, 2020), col = "brown1")
mtext("Cumulative number of specimens", side = 2, line = 5)
labels <- format(seq(10000, 150000, 20000), big.mark = ",", scientific = FALSE)
axis(side = 2, at = seq(10000, 150000, 20000), labels = labels, las=1)
text(x = sp$Acquisition, y = sp$Cumulative, sp$Collector, cex = 0.7, pos = 2)
segments(x0 = sp$Acquisition, y0 = 0, y1 = sp$cumulag, lwd = lwd, col = "grey30")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "firebrick")
segments(x0 = sp$Acquisition, y0 = 0, y1 = sp$cumulag, lwd = lwd, col = "grey10")
plot(sp$Acquisition, sp$Cumulative, type = "h", lwd = lwd, xlab = "Year of acquisition", ylab = "", las = 1, yaxt= "n", xlim = c(1900, 2020), col = "brown1")
segments(x0 = sp$Acquisition, y0 = 0, y1 = sp$cumulag, lwd = lwd, col = "grey10")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "darkred")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "salmon")
plot(sp$Acquisition, sp$Cumulative, type = "h", lwd = lwd, xlab = "Year of acquisition", ylab = "", las = 1, yaxt= "n", xlim = c(1900, 2020), col = "brown")
segments(x0 = sp$Acquisition, y0 = 0, y1 = sp$cumulag, lwd = lwd, col = "grey10")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "salmon")
plot(sp$Acquisition, sp$Cumulative, type = "h", lwd = lwd, xlab = "Year of acquisition", ylab = "", las = 1, yaxt= "n", xlim = c(1900, 2020), col = "palevioletred")
segments(x0 = sp$Acquisition, y0 = 0, y1 = sp$cumulag, lwd = lwd, col = "grey10")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "salmon")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "sandybrown")
plot(sp$Acquisition, sp$Cumulative, type = "h", lwd = lwd, xlab = "Year of acquisition", ylab = "", las = 1, yaxt= "n", xlim = c(1900, 2020), col = "lightcoral")
segments(x0 = sp$Acquisition, y0 = 0, y1 = sp$cumulag, lwd = lwd, col = "grey10")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "mediumslateblue")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "mediumorchid")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "chocolate")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "mediumslateblue")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "darkmagenta")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "darkorchid")
plot(sp$Acquisition, sp$Cumulative, type = "h", lwd = lwd, xlab = "Year of acquisition", ylab = "", las = 1, yaxt= "n", xlim = c(1900, 2020), col = "mediumslateblue")
segments(x0 = sp$Acquisition, y0 = 0, y1 = sp$cumulag, lwd = lwd, col = "grey10")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "royalblue")
plot(sp$Acquisition, sp$Cumulative, type = "h", lwd = lwd, xlab = "Year of acquisition", ylab = "", las = 1, yaxt= "n", xlim = c(1900, 2020), col = "steelblue")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "royalblue")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "mediumblue")
segments(x0 = sp$Acquisition, y0 = 0, y1 = sp$cumulag, lwd = lwd, col = "grey10")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "mediumblue")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "seagreen")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "cyan")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "torquoise")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "turquoise")
plot(sp$Acquisition, sp$Cumulative, type = "h", lwd = lwd, xlab = "Year of acquisition", ylab = "", las = 1, yaxt= "n", xlim = c(1900, 2020), col = "steelblue")
segments(x0 = sp$Acquisition, y0 = 0, y1 = sp$cumulag, lwd = lwd, col = "grey10")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "turquoise")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "cadetblue")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "cornflowerblue")
plot(sp$Acquisition, sp$Cumulative, type = "h", lwd = lwd, xlab = "Year of acquisition", ylab = "", las = 1, yaxt= "n", xlim = c(1900, 2020), col = "steelblue")
segments(x0 = sp$Acquisition, y0 = 0, y1 = sp$cumulag, lwd = lwd, col = "grey10")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "cornflowerblue")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "powderblue")
png("D:/Diana/Entomologia Manchester Museum/Spiders/collectors.png", width = 210, height = 100, units = "mm", res = 100)
par(mar = c(5, 6, 1, 1), mgp= c(3, 1,0))
plot(sp$Acquisition, sp$Cumulative, type = "h", lwd = lwd, xlab = "Year of acquisition", ylab = "", las = 1, yaxt= "n", xlim = c(1900, 2020), col = "steelblue")
mtext("Cumulative number of specimens", side = 2, line = 5)
labels <- format(seq(10000, 150000, 20000), big.mark = ",", scientific = FALSE)
axis(side = 2, at = seq(10000, 150000, 20000), labels = labels, las=1)
text(x = sp$Acquisition, y = sp$Cumulative, sp$Collector, cex = 0.7, pos = 2)
segments(x0 = sp$Acquisition, y0 = 0, y1 = sp$cumulag, lwd = lwd, col = "grey10")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "powderblue")
dev.off()
png("D:/Diana/Entomologia Manchester Museum/Spiders/collectors.png", width = 210, height = 100, units = "mm", res = 200)
par(mar = c(5, 6, 1, 1), mgp= c(3, 1,0))
plot(sp$Acquisition, sp$Cumulative, type = "h", lwd = lwd, xlab = "Year of acquisition", ylab = "", las = 1, yaxt= "n", xlim = c(1900, 2020), col = "steelblue")
mtext("Cumulative number of specimens", side = 2, line = 5)
labels <- format(seq(10000, 150000, 20000), big.mark = ",", scientific = FALSE)
axis(side = 2, at = seq(10000, 150000, 20000), labels = labels, las=1)
text(x = sp$Acquisition, y = sp$Cumulative, sp$Collector, cex = 0.7, pos = 2)
segments(x0 = sp$Acquisition, y0 = 0, y1 = sp$cumulag, lwd = lwd, col = "grey10")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "powderblue")
dev.off()
## cumulative
lwd<-7
plot(sp$Acquisition, sp$Cumulative, type = "h", lwd = lwd, xlab = "Year of acquisition", ylab = "", las = 1, yaxt= "n", xlim = c(1900, 2020), col = "steelblue")
segments(x0 = sp$Acquisition, y0 = 0, y1 = sp$cumulag, lwd = lwd, col = "grey10")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "powderblue")
png("D:/Diana/Entomologia Manchester Museum/Spiders/collectors.png", width = 210, height = 100, units = "mm", res = 200)
par(mar = c(5, 6, 1, 1), mgp= c(3, 1,0))
plot(sp$Acquisition, sp$Cumulative, type = "h", lwd = lwd, xlab = "Year of acquisition", ylab = "", las = 1, yaxt= "n", xlim = c(1900, 2020), col = "steelblue")
mtext("Cumulative number of specimens", side = 2, line = 5)
labels <- format(seq(10000, 150000, 20000), big.mark = ",", scientific = FALSE)
axis(side = 2, at = seq(10000, 150000, 20000), labels = labels, las=1)
text(x = sp$Acquisition, y = sp$Cumulative, sp$Collector, cex = 0.7, pos = 2)
segments(x0 = sp$Acquisition, y0 = 0, y1 = sp$cumulag, lwd = lwd, col = "grey10")
segments(x0 = sp$Acquisition[4], y0 = sp$cumulag[4], y1 = sp$cumulag[5], lwd = lwd, col= "powderblue")
dev.off()
SA.sphere <- function(r) 4*pi*r^2
Vol.sphere <- function(r) (4/3)*pi*r^3
r <- 1:50
SA <- SA.sphere(r)
plot(r, SA)
Vol <- VOl.sphere(r)
Vol <- Vol.sphere(r)
plot(r, Vol)
lns <- Vol.sphere(seq(0,50, 10))
for(i in seq_along(lns)) abline(h = lns[i])
for(i in seq_along(lns)) abline(h = lns[i], col = "darkblue", lty = 2)
Vol <- Vol.sphere(r)
for(i in seq_along(lns)) abline(h = lns[i], col = "darkblue", lty = 2)
Vol <- Vol.sphere(r)
plot(r, Vol)
for(i in seq_along(lns)) abline(h = lns[i], col = "darkblue", lty = 3)
r2 <- seq(0,50, 10)
lns <- Vol.sphere(r2)
segments(r2, lns)
segments(x0 = r2, y0 = 0, x1 = lns)
plot(r, Vol)
segments(x0 = r2, y0 = 0, x1 = lns)
segments(x0 = r2, y0 = 0, y1 = lns)
segments(x0 = r2, y0 = lns, x1 = lns)
segments(x1 = r2, y0 = lns, x0 = lns)
segments(x0 = r2, y0 = lns, y1 = 0)
segments(x0 = r2, y0 = lns, x1 = 0)
mx <- 50
r <- 1:mx
SA <- SA.sphere(r)
Vol <- Vol.sphere(r)
plot(r, SA)
plot(r, Vol, xlim = c(0, mx))
r2 <- seq(0,mx, 10)
lns <- Vol.sphere(r2)
segments(x0 = r2, y0 = 0, y1 = lns)
segments(x0 = r2, y0 = lns, x1 = 0)
r <- 1:mx
r
SA <- SA.sphere(r)
SA
plot(r, SA)
mx <- 1000
r <- 1:mx
SA <- SA.sphere(r)
Vol <- Vol.sphere(r)
plot(r, SA)
mx <- 100
r <- 1:mx
SA <- SA.sphere(r)
Vol <- Vol.sphere(r)
plot(r, SA)
plot(r, Vol, xlim = c(0, mx))
segments(x0 = r2, y0 = 0, y1 = lns)
r2 <- seq(0,mx, 10)
lns <- Vol.sphere(r2)
segments(x0 = r2, y0 = 0, y1 = lns)
segments(x0 = r2, y0 = lns, x1 = 0)
plot(SA, Vol)
SA.cube <- function(x) 6*x^2
Vol.cube <- function(x) x^3
SA.cube <- function(x) 6*x^2
Vol.cube <- function(x) x^3
mx <- 100
r <- 1:mx
SA.c <- SA.cube(r)
Vol.c <- Vol.cube(r)
plot(r, SA)
plot(SA.c, Vol.c)
r2 <- seq(0,mx, 10)
lns <- Vol.sphere(r2)
plot(SA, Vol)
segments(x0 = r2, y0 = 0, y1 = lns)
segments(x0 = r2, y0 = lns, x1 = 0)
??3d
??"3d"
lattice::cloud(r ~ SA * Vol )
lattice::cloud(Vol ~ SA * r )
lattice::cloud(SA ~ Vol * r )
x <- 2
y <- 3
z <- x^2 + y^2
sqrt(z)
sqrt(z) %% 1
(sqrt(z) %% 1) == 0
x <- 8
y <- 6
z <- x^2 + y^2
(sqrt(z) %% 1) == 0
sqrt(z)
sqrt(z) %% 1
10/1
x <- 1:10
y <- 6
y <- 3
z <- x^2 + y^2
(sqrt(z) %% 1) == 0
x <- 1:15
y <- 3
z <- x^2 + y^2
(sqrt(z) %% 1) == 0
x <- 1:15
y <- 1:10
z <- x^2 + y^2
x <- 1:15
y <- 1:15
z <- x^2 + y^2
(sqrt(z) %% 1) == 0
m <- x%o%y
findSQ <-0 function(x, y){
m <- x%o%y
for(i in seq_along(x)){
for(j in seq_along(y)) {
z <- x^2 + y^2
m[i,j] <- (sqrt(z) %% 1) == 0
}
}
}
findSQ <-0 function(x, y){
m <- x%o%y
for(i in seq_along(x)){
for(j in seq_along(y)) {
z <- x^2 + y^2
m[i,j] <- (sqrt(z) %% 1) == 0
}
}
}
seq_along(x)
findSQ <- function(x, y){
m <- x%o%y
for(i in seq_along(x)){
for(j in seq_along(y)) {
z <- x[i]^2 + y[j]^2
m[i,j] <- (sqrt(z) %% 1) == 0
}
}
}
findSQ(x,y)
findSQ <- function(x, y){
m <- x%o%y
for(i in seq_along(x)){
for(j in seq_along(y)) {
z <- x[i]^2 + y[j]^2
m[i,j] <- (sqrt(z) %% 1) == 0
}
}
m
}
findSQ(x,y)
m <- x%o%y
View(m)
findSQ <- function(x, y){
m1 <- m2 <- x%o%y
for(i in seq_along(x)){
for(j in seq_along(y)) {
z <- x[i]^2 + y[j]^2
m1[i,j] <- (sqrt(z) %% 1) == 0
m2[i,j] <- z
}
}
list(m1,m2)
}
findSQ(x,y)
res <- findSQ(x,y)
res[[1]]* res[[2]]
#m1 <- m2 <- x%o%y
m1 <- m2 <- matrix(data = NA, nrow = length(x), ncol = length(y), dimnames = list(x, y))
m1
findSQ <- function(x, y){
#m1 <- m2 <- x%o%y
m1 <- m2 <- matrix(data = NA, nrow = length(x), ncol = length(y), dimnames = list(x, y))
for(i in seq_along(x)){
for(j in seq_along(y)) {
z <- x[i]^2 + y[j]^2
m1[i,j] <- (sqrt(z) %% 1) == 0
m2[i,j] <- z
}
}
#list(m1,m2)
m1 * m2
}
findSQ(x,y)
findSQ <- function(x, y){
#m1 <- m2 <- x%o%y
m1 <- m2 <- matrix(data = NA, nrow = length(x), ncol = length(y), dimnames = list(x, y))
for(i in seq_along(x)){
for(j in seq_along(y)) {
z <- x[i]^2 + y[j]^2
m1[i,j] <- (sqrt(z) %% 1) == 0
m2[i,j] <- z
}
}
list(m1,m2)
#m1 * m2
}
findSQ(x,y)
res <- findSQ(x,y)
res <- findSQ(x,y)
res[[1]]* res[[2]]
findSQ <- function(x, y){
#m1 <- m2 <- x%o%y
m1 <- m2 <- matrix(data = NA, nrow = length(x), ncol = length(y), dimnames = list(x, y))
for(i in seq_along(x)){
for(j in seq_along(y)) {
z <- x[i]^2 + y[j]^2
m1[i,j] <- (sqrt(z) %% 1) == 0
m2[i,j] <- z
}
}
#list(m1,m2)
m3 <- m1 * m2
m3[m3 == 0] <- NA
m3
}
findSQ(x,y)
findSQ <- function(x, y){
#m1 <- m2 <- x%o%y
m1 <- m2 <- matrix(data = NA, nrow = length(x), ncol = length(y), dimnames = list(x, y))
for(i in seq_along(x)){
for(j in seq_along(y)) {
z <- x[i]^2 + y[j]^2
m1[i,j] <- (sqrt(z) %% 1) == 0
m2[i,j] <- z
}
}
#list(m1,m2)
# m3 <- m1 * m2
# m3[m3 == 0] <- NA
# m3
m1 * m2
}
x <- 1:25
y <- 1:25
findSQ(x,y)
findSQ <- function(x, y){
#m1 <- m2 <- x%o%y
m1 <- m2 <- matrix(data = NA, nrow = length(x), ncol = length(y), dimnames = list(x, y))
for(i in seq_along(x)){
for(j in seq_along(y)) {
z <- x[i]^2 + y[j]^2
m1[i,j] <- (sqrt(z) %% 1) == 0
m2[i,j] <- z
}
}
#list(m1,m2)
# m3 <- m1 * m2
# m3[m3 == 0] <- NA
# m3
m1 * m2
}
findSQ(x,y)
as.character(findSQ(x,y))
findSQ(x,y)
x <- 1:10/2
x <- 1:10*2
y <- 1:25
x <- 1:10*2
findSQ(x,y)
findSQ(1:100, 1:100)
x <- 1:25
y <- 1:25
findSQ(x,y)
x <- 1:30
y <- 1:30
findSQ(x,y)
findSQ <- function(x, y){
#m1 <- m2 <- x%o%y
m1 <- m2 <- matrix(NA, nrow = length(x), ncol = length(y), dimnames = list(x, y))
for(i in seq_along(x)){
for(j in seq_along(y)) {
z <- x[i]^2 + y[j]^2
m1[i,j] <- (sqrt(z) %% 1) == 0
m2[i,j] <- z
}
}
#list(m1,m2)
# m3 <- m1 * m2
# m3[m3 == 0] <- NA
# m3
m1 * m2
}
x <- 1:30
y <- 1:30
findSQ(x,y)
16+9
x <- 1:10*2
y <- 1:25
findSQ(x,y)
dist
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian"), 3)
sample(c("Tom", "Diana", "Christian", "Mary"), 1)
library(MASS)
dnorm(10, mean = 0, sd = 1)
dnorm(0, mean = 0, sd = 1)
dnorm(0, mean = 0, sd = 1)
pnorm(0, mean = 0, sd = 1)
pnorm(10000, mean = 0, sd = 1)
pnorm(-1, mean = 0, sd = 1)
pnorm(-1, mean = 0, sd = 1)
library(MASS)
mvrnorm()
pnorm(-1, mean = 0, sd = 1)
samples_list = c(5,100)
thin_list = c(1,5)
nChains <- 4
# iterations per chain
(samples_list * thin_list) + ceiling(0.5*thin_list*samples_list)
samples_list = c(5,250,250,250,250,250)
thin_list = c(1,1,10,100,1000,10000)
# iterations per chain
(samples_list * thin_list) + ceiling(0.5*thin_list*samples_list)
samples_list = c(5,250,250)
thin_list = c(1,10,100)
## samples_list = c(5,100)
## thin_list = c(1,5)
nChains <- 4
# iterations per chain
(samples_list * thin_list) + ceiling(0.5*thin_list*samples_list)
samples_list = c(50,250,250)
thin_list = c(1,10,50)
## samples_list = c(5,100)
## thin_list = c(1,5)
nChains <- 4
# iterations per chain
(samples_list * thin_list) + ceiling(0.5*thin_list*samples_list)
thin_list = c(1,10,20)
## samples_list = c(5,100)
## thin_list = c(1,5)
nChains <- 4
# iterations per chain
(samples_list * thin_list) + ceiling(0.5*thin_list*samples_list)
samples_list = c(50,250)
thin_list = c(1,10)
## samples_list = c(5,100)
## thin_list = c(1,5)
nChains <- 4
# iterations per chain
(samples_list * thin_list) + ceiling(0.5*thin_list*samples_list)
samples_list = c(50,200)
thin_list = c(1,10)
## samples_list = c(5,100)
## thin_list = c(1,5)
nChains <- 4
# iterations per chain
(samples_list * thin_list) + ceiling(0.5*thin_list*samples_list)
setwd("D:/CD/UEA/gitHRepos/HJA_analyses_Kelpie/Hmsc_CD/oregon_ada")
library(dplyr)
resFolder <-"code_sjSDM/r20210616a/results"
abund <- "pa"
## load model data
load(file.path(resFolder, paste0("modelData_",abund,".rdata")))
dir(resFolder)
resFolder <-"code_sjSDM/r20210616a/results"
abund <- "pa"
## load model data
load(file.path(resFolder, paste0("modelData_",abund,".rdata")))
head(env.vars)
dir(resFolder)
resFolder <-"code_sjSDM/r20210610a/results"
abund <- "pa"
dir(resFolder)
## load model data
load(file.path(resFolder, paste0("modelData_",abund,".rdata")))
head(env.vars)
## load model data
load(file.path(resFolder, paste0("modelData_",abund,".rdata")))
setwd("D:/CD/UEA/gitHRepos/HJA_analyses_Kelpie/Hmsc_CD/oregon_ada)
resFolder <-"code_sjSDM/r20210610a/results"
abund <- "pa"
dir(resFolder)
resFolder <-"code_sjSDM/r20210610a/results"
abund <- "pa"
dir(resFolder)
## load model data
load(file.path(resFolder, paste0("modelData_",abund,".rdata")))
head(env.vars)
res <- read.csv(file.path(resFolder,paste0("manual_tuning_sjsdm_", varsName, "_", k, "CV_", spChoose,
"_meanEVAL_",
abund,
"_min",
minocc,
"_nSteps",
noSteps,
".csv")))
head(res)
res.best <- res[which.max(res$AUC.test_mean),,drop = T]
res.best
rm(res)

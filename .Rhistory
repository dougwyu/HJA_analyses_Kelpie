breaks
nCol <- length(breaks)-1
image(t(cpu), col = cols(nCol), breaks = breaks, ylab = "species", yaxt = "n", xaxt = "n", main = "cpu0")
cols <- colorRampPalette(c("red", "white", "blue"))
image(t(cpu), col = cols(nCol), breaks = breaks, ylab = "species", yaxt = "n", xaxt = "n", main = "cpu0")
op <- par(mfrow = c(1,3), mar = c(12, 5, 2, 1))
image(t(cpu), col = cols(nCol), breaks = breaks, ylab = "species", yaxt = "n", xaxt = "n", main = "cpu0")
image(t(cpu1), col = cols(nCol), breaks = breaks, xlab = "predictors", yaxt = "n", xaxt = "n", main = "cpu1")
image(t(cpu2), col = cols(nCol), breaks = breaks, yaxt = "n", xaxt = "n", main = "cpu2")
breaks <- c(-2, -1, 0, 1, 2)
png("Hmsc_CD/local/plots/gpu_cpu_compare_3runs_lm_cpu.png", width = 250, height = 150, units = "mm", res = 100)
op <- par(mfrow = c(1,3), mar = c(12, 5, 2, 1))
image(t(cpu), col = cols(nCol), breaks = breaks, ylab = "species", yaxt = "n", xaxt = "n", main = "cpu0")
axis(side = 1, at = seq(0,1, length.out = n), labels = preds, las = 2)
image(t(cpu1), col = cols(nCol), breaks = breaks, xlab = "predictors", yaxt = "n", xaxt = "n", main = "cpu1")
image(t(cpu2), col = cols(nCol), breaks = breaks, yaxt = "n", xaxt = "n", main = "cpu2")
dev.off()
preds <- c(model_cpu_lm$names, "spatial")
png("Hmsc_CD/local/plots/gpu_cpu_compare_3runs_lm_cpu.png", width = 250, height = 150, units = "mm", res = 100)
op <- par(mfrow = c(1,3), mar = c(12, 5, 2, 1))
image(t(cpu), col = cols(nCol), breaks = breaks, ylab = "species", yaxt = "n", xaxt = "n", main = "cpu0")
axis(side = 1, at = seq(0,1, length.out = n), labels = preds, las = 2)
image(t(cpu1), col = cols(nCol), breaks = breaks, xlab = "predictors", yaxt = "n", xaxt = "n", main = "cpu1")
image(t(cpu2), col = cols(nCol), breaks = breaks, yaxt = "n", xaxt = "n", main = "cpu2")
dev.off()
cpu.arr <- array(c(cpu, cpu1, cpu2), dim = c(dim(cpu), 3))
cpu[1:5,1:5]
cpu.arr[1:5,1:5,1]
cpu1[1:5,1:5]
cpu.arr[1:5,1:5,2]
mn.cpu <- apply(cpu.arr, c(1,2), mean)
mean(cpu[1,1], cpu1[1,1], cpu2[1,1])
mn.cpu[1,1]
mean(cpu[1,1], cpu1[1,1], cpu2[1,1])
mn.cpu[1,1]
mn.cpu[1,1,1]
mn.cpu <- apply(cpu.arr, 3, mean)
mn.cpu <- apply(cpu.arr, c(1,2), mean)
mn.cpu[1:5,1:5]
cpu[1,1]
mean(cpu[1,1], cpu1[1,1], cpu2[1,1])
mn.cpu[1:5,1:5]
mean(c(cpu[1,1], cpu1[1,1], cpu2[1,1]))
mn.cpu[1:5,1:5]
mn.cpu[1,1]
mean(c(cpu[1,1], cpu1[1,1], cpu2[1,1]))
mn.cpu[1,1]
sd.cpu <- apply(cpu.arr, c(1,2), mean)
cv.cpu <- sd.cpu/mn.cpu
cv.cpu
sd.cpu <- apply(cpu.arr, c(1,2), sd)
cv.cpu <- sd.cpu/mn.cpu
image(t(cv.cpu), col = cols(nCol), breaks = breaks, yaxt = "n", xaxt = "n", main = "cpu cv")
summary(cv.cpu)
png("Hmsc_CD/local/plots/gpu_cpu_compare_3runs_lm_cpu.png", width = 250, height = 150, units = "mm", res = 100)
op <- par(mfrow = c(1,4), mar = c(12, 5, 2, 1))
image(t(cpu), col = cols(nCol), breaks = breaks, ylab = "species", yaxt = "n", xaxt = "n", main = "cpu0")
axis(side = 1, at = seq(0,1, length.out = n), labels = preds, las = 2)
image(t(cpu1), col = cols(nCol), breaks = breaks, xlab = "predictors", yaxt = "n", xaxt = "n", main = "cpu1")
image(t(cpu2), col = cols(nCol), breaks = breaks, yaxt = "n", xaxt = "n", main = "cpu2")
image(t(cv.cpu), col = cols(nCol), breaks = breaks, yaxt = "n", xaxt = "n", main = "cpu cv")
dev.off()
preds
axis(side = 1, at = seq(0,1, length.out = n), labels = preds, las = 2)
n <- ncol(coef_gpu_lm$env[[1]]) + 1
png("Hmsc_CD/local/plots/gpu_cpu_compare_3runs_lm_cpu.png", width = 250, height = 150, units = "mm", res = 100)
op <- par(mfrow = c(1,4), mar = c(12, 5, 2, 1))
image(t(cpu), col = cols(nCol), breaks = breaks, ylab = "species", yaxt = "n", xaxt = "n", main = "cpu0")
axis(side = 1, at = seq(0,1, length.out = n), labels = preds, las = 2)
image(t(cpu1), col = cols(nCol), breaks = breaks, xlab = "predictors", yaxt = "n", xaxt = "n", main = "cpu1")
image(t(cpu2), col = cols(nCol), breaks = breaks, yaxt = "n", xaxt = "n", main = "cpu2")
image(t(cv.cpu), col = cols(nCol), breaks = breaks, yaxt = "n", xaxt = "n", main = "cpu cv")
dev.off()
summary(cv.cpu)
cv.cpu
sum(is.na(cv.cpu))
symbols(1:nCol, rep(1, nCol), squares = rep(4, nCol), bg = cols(nCol))
summary(cv.cpu)
range(cv.cpu)
breaks.cv <- quantile(c(cv.cpu))
image(t(cv.cpu), col = cols(nCol), breaks = breaks.cv, yaxt = "n", xaxt = "n", main = "cpu cv")
summary(cv.cpu)
quantile(cv.cpu)
breaks.cv <- c(range(cv.cpu)[1], -0.1, 0.1, range(cv.cpu)[2])
image(t(cv.cpu), col = cols(nCol), breaks = breaks.cv, yaxt = "n", xaxt = "n", main = "cpu cv")
image(t(cv.cpu), col = cols(length(breaks.cv)-1), breaks = breaks.cv, yaxt = "n", xaxt = "n", main = "cpu cv")
breaks.cv <- c(range(cv.cpu)[1], -0.25, 0.25, range(cv.cpu)[2])
image(t(cv.cpu), col = cols(length(breaks.cv)-1), breaks = breaks.cv, yaxt = "n", xaxt = "n", main = "cpu cv")
png("Hmsc_CD/local/plots/gpu_cpu_compare_3runs_lm_cpu.png", width = 250, height = 150, units = "mm", res = 100)
op <- par(mfrow = c(1,4), mar = c(12, 5, 2, 1))
image(t(cpu), col = cols(nCol), breaks = breaks, ylab = "species", yaxt = "n", xaxt = "n", main = "cpu0")
axis(side = 1, at = seq(0,1, length.out = n), labels = preds, las = 2)
image(t(cpu1), col = cols(nCol), breaks = breaks, xlab = "predictors", yaxt = "n", xaxt = "n", main = "cpu1")
image(t(cpu2), col = cols(nCol), breaks = breaks, yaxt = "n", xaxt = "n", main = "cpu2")
image(t(cv.cpu), col = cols(length(breaks.cv)-1), breaks = breaks.cv, yaxt = "n", xaxt = "n", main = "cpu cv")
dev.off()
cols(length(breaks.cv)-1)
breaks <- quantile(c(cpu, cpu1, cpu2))
nCol <- length(breaks)-1
png("Hmsc_CD/local/plots/gpu_cpu_compare_3runs_lm_cpu.png", width = 250, height = 150, units = "mm", res = 100)
op <- par(mfrow = c(1,4), mar = c(12, 5, 2, 1))
image(t(cpu), col = cols(nCol), breaks = breaks, ylab = "species", yaxt = "n", xaxt = "n", main = "cpu0")
axis(side = 1, at = seq(0,1, length.out = n), labels = preds, las = 2)
image(t(cpu1), col = cols(nCol), breaks = breaks, xlab = "predictors", yaxt = "n", xaxt = "n", main = "cpu1")
image(t(cpu2), col = cols(nCol), breaks = breaks, yaxt = "n", xaxt = "n", main = "cpu2")
image(t(cv.cpu), col = cols(length(breaks.cv)-1), breaks = breaks.cv, yaxt = "n", xaxt = "n", main = "cpu cv")
dev.off()
install.packages("paws")
library("paws")
s3 <- paws::s3()
bList <- s3$list_objects(Bucket = "sentinel-s2-l2a-mosaic-120")
s3 <- paws::s3(config = list(region = "eu-central-1"))
bList <- s3$list_objects(Bucket = "sentinel-s2-l2a-mosaic-120")
s3 <- paws::s3(config = list(creds = list(access_key_id = "AKIAJNUOXAND747ZTBYA" ,
secret_access_key = "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"),
region = "eu-central-1"))
s3 <- paws::s3(
config = list(
credentials = list(
creds = list(
access_key_id = "AKIAJNUOXAND747ZTBYA",
secret_access_key = "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")
),
region = "eu-central-1"
)
bList <- s3$list_objects(Bucket = "sentinel-s2-l2a-mosaic-120")
str(bList, max.level = 1)
str(bList$, max.level = 1)
str(bList$Contents, max.level = 1)
str(bList$Contents[[1]], max.level = 1)
str(bList$Contents[[2]], max.level = 1)
str(bList$Contents[[8]], max.level = 1)
key.lst <- lapply(bList$Contents, function(x) x[[1]]$key)
key.lst <- lapply(bList$Contents, function(x) x[[1]]["key"])
key.lst <- lapply(bList$Contents, function(x) x[[1]][["key"]])
str(bList$Contents[[1]], max.level = 1)
str(bList, max.level = 1)
key.lst <- lapply(bList$Contents, function(x) x[1]["key"])
key.lst <- lapply(bList$Contents, function(x) x[[1]]["Key"])
bList$Contents[[1]]$Key
key.lst <- lapply(bList$Contents, function(x) x[1]["Key"])
key.lst <- lapply(bList$Contents, function(x) x[1][["Key"]])
key.df <- do.call(rbind, lapply(bList$Contents, function(x) x[1][["Key"]]))
key.df <- do.call(rbind, lapply(bList$Contents, function(x) key = x[1][["Key"]]))
head(key.df)
key.df <- data.frame(do.call(rbind, lapply(bList$Contents, function(x) x[1][["Key"]])))
colnames(key.df) <- "Key"
head(key.df)
head(key.df, 100)
library(dplyr)
key2 <- key.df %>%
tidyr::separate(col = Key, into = c("year", "month", "day", "utm", "band"),
remove = FALSE, sep = "/") %>%
key2 <- key.df %>%
tidyr::separate(col = Key, into = c("year", "month", "day", "utm", "band"),
remove = FALSE, sep = "/")
head(key2)
key2 <- key.df %>%
tidyr::separate(col = Key, into = c("year", "month", "day", "utm", "band"),
remove = FALSE, sep = "/") %>%
mutate(band = sub("\\.tif$", "", band))
head(key2)
key.df <- key.df %>%
tidyr::separate(col = Key, into = c("year", "month", "day", "utm", "band"),
remove = FALSE, sep = "/") %>%
mutate(band = sub("\\.tif$", "", band))
head(key.df)
unique(key.df$day)
unique(key.df$month)
str(bList$Contents[[1]], max.level = 1)
str(bList, max.level = 1)
tif <- s3$get_object(Bucket = "sentinel-s2-l2a-mosaic-120", Key = "2019/1/1/11T/B02.tif")
str(tif, max.level = 1)
install.packages("aws.s3")
r < raster::raster(tif$Body)
r <- raster::raster(tif$Body)
library("aws.s3")
fn <- "J:/UEA/Oregon/gis/r_aws/2019_1_1_11T_B02.tif"
obj <- get_bucket(bucket = "sentinel-s2-l2a-mosaic-120", max = 100)
raster::raster(tif$Body)
r <- raster::raster(rawConnection(tif$Body))
r <- raster::raster(file(rawConnection(tif$Body)))
f <- file(rawConnection(tif$Body))
r <- rawConnection(tif$Body)
r
getwd()
wd <- here::here()
setwd(wd)
dir()
library(sf)
library(raster)
# wgs84 UTM 10N
utm10N <- 32610
# EPSG:26910  NAD83 / UTM zone 10N
nadutm10 <- 26910
# EPSG:4269 # NAD 83
# nad83 <- 4269
# gis <- "J:/UEA/Oregon/gis"
samtoolsfilter <- "F2308" # F2308 filter only
samtoolsqual <- "q48"
minimaprundate <- 20200929
kelpierundate <- 20200927
primer <- "BF3BR2"
gitHub <- "https://raw.githubusercontent.com/dougwyu/HJA_analyses_Kelpie/master/Kelpie_maps"
outputidxstatstabulatefolder <- paste0("outputs_minimap2_",minimaprundate,"_",samtoolsfilter,"_",
samtoolsqual, "_kelpie", kelpierundate,"_", primer,"_vsearch97")
datFile <- paste0("sample_by_species_table_", samtoolsfilter, "_minimap2_", minimaprundate,"_kelpie",
kelpierundate,"_FSL_qp.csv")
fn <- file.path(gitHub, outputidxstatstabulatefolder, datFile)
# what file am i using?
basename(fn)
# when was it modified?
file.mtime(fn)
# read complete data set
otuenv <- read.csv(fn, stringsAsFactors = FALSE, na.strings = "NA")
rm(datFile, gitHub, kelpierundate, minimaprundate, outputidxstatstabulatefolder, period, primer, samtoolsfilter, samtoolsqual, trap, fn)
env.vars <- otuenv %>%
dplyr::select(!contains("__"), -UTM_E, -UTM_N, -starts_with("nor")) %>%
mutate(elevation_m = elevation_f * 0.3048, ## convert to metres
canopyHeight_m = canopyHeight_f * 0.3048,
lg_DistStream = log(distToStream_m + 0.001),
lg_DistRoad = log(distToRoad_m + 0.001),
lg_YrsDisturb = log(YrsSinceDist + 0.001),
dplyr::select(clearcut,insideHJA,oldGrowthIndex, elevation_m, canopyHeight_m, precipitation_mm, minT_annual,
maxT_annual, mean.NDVI, mean.EVI, mean.green, mean.wet, mean.bright, l_p25, l_p95, l_rumple, lg_DistStream,
lg_DistRoad, lg_YrsDisturb, be10, tri, slope, twi, Nss, Ess, ht, ht.r500, cov2_4, cov2_4.r500,
cov4_16, cov4_16.r500, mTopo, cut.r1k.pt,) %>%
mutate( #across(where(is.numeric), scale), # scale here # scale when defining models etc.
clearcut = factor(clearcut),
insideHJA = factor(insideHJA))
env.vars <- otuenv %>%
dplyr::select(!contains("__"), -UTM_E, -UTM_N, -starts_with("nor")) %>%
mutate(elevation_m = elevation_f * 0.3048, ## convert to metres
canopyHeight_m = canopyHeight_f * 0.3048,
lg_DistStream = log(distToStream_m + 0.001),
lg_DistRoad = log(distToRoad_m + 0.001),
lg_YrsDisturb = log(YrsSinceDist + 0.001),
dplyr::select(clearcut,insideHJA,oldGrowthIndex, elevation_m, canopyHeight_m, precipitation_mm, minT_annual,
maxT_annual, mean.NDVI, mean.EVI, mean.green, mean.wet, mean.bright, l_p25, l_p95, l_rumple, lg_DistStream,
lg_DistRoad, lg_YrsDisturb, be10, tri, slope, twi, Nss, Ess, ht, ht.r500, cov2_4, cov2_4.r500,
cov4_16, cov4_16.r500, mTopo, cut.r1k.pt) %>%
mutate( #across(where(is.numeric), scale), # scale here # scale when defining models etc.
clearcut = factor(clearcut),
insideHJA = factor(insideHJA))
env.vars <- otuenv %>%
dplyr::select(!contains("__"), -UTM_E, -UTM_N, -starts_with("nor")) %>%
mutate(elevation_m = elevation_f * 0.3048, ## convert to metres
canopyHeight_m = canopyHeight_f * 0.3048,
lg_DistStream = log(distToStream_m + 0.001),
lg_DistRoad = log(distToRoad_m + 0.001),
lg_YrsDisturb = log(YrsSinceDist + 0.001)) %>%
dplyr::select(clearcut,insideHJA,oldGrowthIndex, elevation_m, canopyHeight_m, precipitation_mm, minT_annual,
maxT_annual, mean.NDVI, mean.EVI, mean.green, mean.wet, mean.bright, l_p25, l_p95, l_rumple, lg_DistStream,
lg_DistRoad, lg_YrsDisturb, be10, tri, slope, twi, Nss, Ess, ht, ht.r500, cov2_4, cov2_4.r500,
cov4_16, cov4_16.r500, mTopo, cut.r1k.pt) %>%
mutate( #across(where(is.numeric), scale), # scale here # scale when defining models etc.
clearcut = factor(clearcut),
insideHJA = factor(insideHJA))
head(env.vars)
env.vars <- otuenv %>%
dplyr::select(!contains("__"), -starts_with("nor")) %>%
mutate(elevation_m = elevation_f * 0.3048, ## convert to metres
canopyHeight_m = canopyHeight_f * 0.3048,
lg_DistStream = log(distToStream_m + 0.001),
lg_DistRoad = log(distToRoad_m + 0.001),
lg_YrsDisturb = log(YrsSinceDist + 0.001)) %>%
dplyr::select(siteName, UTM_N, UTM_E, clearcut,insideHJA,oldGrowthIndex, elevation_m, canopyHeight_m,
precipitation_mm, minT_annual, maxT_annual, mean.NDVI, mean.EVI, mean.green, mean.wet,
mean.bright, l_p25, l_p95, l_rumple, lg_DistStream, lg_DistRoad, lg_YrsDisturb, be10, tri,
slope, twi, Nss, Ess, ht, ht.r500, cov2_4, cov2_4.r500, cov4_16, cov4_16.r500, mTopo, cut.r1k.pt) %>%
mutate( #across(where(is.numeric), scale), # scale here # scale when defining models etc.
clearcut = factor(clearcut),
insideHJA = factor(insideHJA))
env.vars <- otuenv %>%
dplyr::select(!contains("__"), -starts_with("nor")) %>%
mutate(elevation_m = elevation_f * 0.3048, ## convert to metres
canopyHeight_m = canopyHeight_f * 0.3048,
lg_DistStream = log(distToStream_m + 0.001),
lg_DistRoad = log(distToRoad_m + 0.001),
lg_YrsDisturb = log(YrsSinceDist + 0.001)) %>%
dplyr::select(SiteName, UTM_N, UTM_E, clearcut,insideHJA,oldGrowthIndex, elevation_m, canopyHeight_m,
precipitation_mm, minT_annual, maxT_annual, mean.NDVI, mean.EVI, mean.green, mean.wet,
mean.bright, l_p25, l_p95, l_rumple, lg_DistStream, lg_DistRoad, lg_YrsDisturb, be10, tri,
slope, twi, Nss, Ess, ht, ht.r500, cov2_4, cov2_4.r500, cov4_16, cov4_16.r500, mTopo, cut.r1k.pt) %>%
mutate( #across(where(is.numeric), scale), # scale here # scale when defining models etc.
clearcut = factor(clearcut),
insideHJA = factor(insideHJA))
head(env.vars)
env.vars <- otuenv %>%
dplyr::select(!contains("__"), -starts_with("nor")) %>%
mutate(elevation_m = elevation_f * 0.3048, ## convert to metres
canopyHeight_m = canopyHeight_f * 0.3048,
lg_DistStream = log(distToStream_m + 0.001),
lg_DistRoad = log(distToRoad_m + 0.001),
lg_YrsDisturb = log(YrsSinceDist + 0.001)) %>%
dplyr::select(SiteName, UTM_N, UTM_E, clearcut,insideHJA,oldGrowthIndex, elevation_m, canopyHeight_m,
precipitation_mm, minT_annual, maxT_annual, mean.NDVI, mean.EVI, mean.green, mean.wet,
mean.bright, l_p25, l_p95, l_rumple, lg_DistStream, lg_DistRoad, lg_YrsDisturb, be10, tri,
slope, twi, Nss, Ess, ht, ht.r500, cov2_4, cov2_4.r500, cov4_16, cov4_16.r500, mTopo, cut.r1k.pt) %>%
mutate( #across(where(is.numeric), scale), # scale here # scale when defining models etc.
clearcut = factor(clearcut),
insideHJA = factor(insideHJA)) %>%
group_by(SiteName) %>%
summarise()
head(env.vars)
env.vars <- otuenv %>%
dplyr::select(!contains("__"), -starts_with("nor")) %>%
mutate(elevation_m = elevation_f * 0.3048, ## convert to metres
canopyHeight_m = canopyHeight_f * 0.3048,
lg_DistStream = log(distToStream_m + 0.001),
lg_DistRoad = log(distToRoad_m + 0.001),
lg_YrsDisturb = log(YrsSinceDist + 0.001)) %>%
dplyr::select(SiteName, UTM_N, UTM_E, clearcut,insideHJA,oldGrowthIndex, elevation_m, canopyHeight_m,
precipitation_mm, minT_annual, maxT_annual, mean.NDVI, mean.EVI, mean.green, mean.wet,
mean.bright, l_p25, l_p95, l_rumple, lg_DistStream, lg_DistRoad, lg_YrsDisturb, be10, tri,
slope, twi, Nss, Ess, ht, ht.r500, cov2_4, cov2_4.r500, cov4_16, cov4_16.r500, mTopo, cut.r1k.pt) %>%
mutate( #across(where(is.numeric), scale), # scale here # scale when defining models etc.
clearcut = factor(clearcut),
insideHJA = factor(insideHJA)) %>%
distinct(SiteName, .keep_all = TRUE)
head(env.vars)
env.vars <- otuenv %>%
dplyr::select(!contains("__"), -starts_with("nor")) %>%
mutate(elevation_m = elevation_f * 0.3048, ## convert to metres
canopyHeight_m = canopyHeight_f * 0.3048,
lg_DistStream = log(distToStream_m + 0.001),
lg_DistRoad = log(distToRoad_m + 0.001),
lg_YrsDisturb = log(YrsSinceDist + 0.001)) %>%
dplyr::select(SiteName, UTM_N, UTM_E, clearcut,insideHJA,oldGrowthIndex, elevation_m, canopyHeight_m,
precipitation_mm, minT_annual, maxT_annual, mean.NDVI, mean.EVI, mean.green, mean.wet,
mean.bright, l_p25, l_p95, l_rumple, lg_DistStream, lg_DistRoad, lg_YrsDisturb, be10, tri,
slope, twi, Nss, Ess, ht, ht.r500, cov2_4, cov2_4.r500, cov4_16, cov4_16.r500, mTopo, cut.r1k.pt) %>%
mutate( #across(where(is.numeric), scale), # scale here # scale when defining models etc.
clearcut = factor(clearcut),
insideHJA = factor(insideHJA))
env.vars <- otuenv %>%
dplyr::select(!contains("__"), -starts_with("nor")) %>%
mutate(elevation_m = elevation_f * 0.3048, ## convert to metres
canopyHeight_m = canopyHeight_f * 0.3048,
lg_DistStream = log(distToStream_m + 0.001),
lg_DistRoad = log(distToRoad_m + 0.001),
lg_YrsDisturb = log(YrsSinceDist + 0.001)) %>%
dplyr::select(SiteName, UTM_N, UTM_E, clearcut,insideHJA,oldGrowthIndex, elevation_m, canopyHeight_m,
precipitation_mm, minT_annual, maxT_annual, mean.NDVI, mean.EVI, mean.green, mean.wet,
mean.bright, l_p25, l_p95, l_rumple, lg_DistStream, lg_DistRoad, lg_YrsDisturb, be10, tri,
slope, twi, Nss, Ess, ht, ht.r500, cov2_4, cov2_4.r500, cov4_16, cov4_16.r500, mTopo, cut.r1k.pt) %>%
mutate( #across(where(is.numeric), scale), # scale here # scale when defining models etc.
clearcut = factor(clearcut),
insideHJA = factor(insideHJA)) %>%
distinct(SiteName, .keep_all = TRUE)
head(env.vars)
library(sf)
library(raster)
utm10N <- 32610
# EPSG:26910  NAD83 / UTM zone 10N
nadutm10 <- 26910
pts.sf <- st_as_sf(env.vars, coords = c("UTM_E", "UTM_N"), crs = nadutm10)
vars <- c("clearcut","insideHJA","oldGrowthIndex", "elevation_m", "canopyHeight_m",
"precipitation_mm", "minT_annual", "maxT_annual", "mean.NDVI",
"Nss", "Ess", "ht.r500", "cov2_4.r500", "cov4_16.r500", "mTopo", "cut.r1k.pt")
mv <- mapview::mapview(pts.sf, zcol = vars,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = F)
mv
mv <- mapview::mapview(pts.sf, zcol = vars, label= "SiteName"
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = F)
mv <- mapview::mapview(pts.sf, zcol = vars, label= "SiteName",
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = F)
pts.sf
mv <- mapview::mapview(pts.sf, zcol = vars, label= pts.sf$SiteName,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = F)
mv
mv <- mapview::mapview(pts.sf, zcol = vars, label= pts.sf$SiteName,homebutton = FALSE,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = F)
mv
mv@map <- mv@map %>% leaflet::hideGroup(group = vars)
mv
mv <- mapview::mapview(pts.sf, zcol = vars, label= pts.sf$SiteName,homebutton = FALSE,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = F)
mv@map <- mv@map %>% leaflet::hideGroup(group = vars[-1])
mv
mapshot(mv, url = "Hmsc_CD/local/plots/pts_map.html", selfcontainted = TRUE) # only works in wd at moment. moved from there.
mapview::mapshot(mv, url = "Hmsc_CD/local/plots/pts_map.html", selfcontainted = TRUE) # only works in wd at moment. moved from there.
getwd()
mapshot(mv, url = "pts_map.html", selfcontainted = TRUE)
mapview::mapshot(mv, url = "pts_map.html", selfcontainted = TRUE)
hja <- st_read("J:/UEA/Oregon/gis/s_nad_utm/HJA_Boundary.shp")
hja
pts.sf
hja_bound <- subset(hja, FP_NAME == "H.J. Andrew Experimental Forest")
hja_bound
mv2 <- mapview::mapview(hja_bound)
mv2
mv2 <- mapview::mapview(hja_bound, col.regions = "green", alpha.regions = 0.3)
mv2
mv2 <- mapview::mapview(hja_bound, col.regions = "green", alpha.regions = 0.7)
mv2
mv2 <- mapview::mapview(hja_bound, col.regions = "green", alpha.regions = 0.1)
mv2
mv2 <- mapview::mapview(hja_bound, col.regions = "blue", alpha.regions = 0.1,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"))
mv1 <- mapview::mapview(pts.sf, zcol = vars, label= pts.sf$SiteName,homebutton = FALSE,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = F)
mv1
mv1@map <- mv1@map %>% leaflet::hideGroup(group = vars[-1])
mv2 <- mapview::mapview(hja_bound, col.regions = "blue", alpha.regions = 0.1,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"))
mv2
mv <- mv1 + mv2
mv
mv1 <- mapview::mapview(pts.sf, zcol = vars, label= pts.sf$SiteName,homebutton = FALSE,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = F)
mv1
## hide the layers by default.. modify leaflet object...
mv1@map <- mv1@map %>% leaflet::hideGroup(group = vars[-1])
# do boundary map
mv2 <- mapview::mapview(hja_bound, col.regions = "blue", alpha.regions = 0.2,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"))
mv2
mv <- mv1 + mv2
mv1 <- mapview::mapview(pts.sf, zcol = vars, label= pts.sf$SiteName,homebutton = FALSE,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = F)
mv1
## hide the layers by default.. modify leaflet object...
mv1@map <- mv1@map %>% leaflet::hideGroup(group = vars[-1])
# do boundary map
mv2 <- mapview::mapview(hja_bound, col.regions = "blue", alpha.regions = 0.2,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"), legend= F, homebutton = TRUE)
mv2
mv <- mv1 + mv2
mv
mv2 <- mapview::mapview(hja_bound, col.regions = "blue", alpha.regions = 0.2, label = NULL,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"), legend= F, homebutton = TRUE)
mv2
mv2 <- mapview::mapview(hja_bound, col.regions = "blue", alpha.regions = 0.2, label = FALSE,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"), legend= F, homebutton = TRUE)
mv2
mv <- mv1 + mv2
mv
mapview::mapshot(mv, url = "pts_map.html", selfcontainted = TRUE)
key_id = "AKIAJNUOXAND747ZTBYA"
secret = "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"
region = "eu-central-1"
obj <- get_bucket(bucket = "sentinel-s2-l2a-mosaic-120", max = 100, key = key_id, secret = secret, region = region)
obj
x <- get_object(obj[[1]])
load(rawConnection(x))
fn <- "J:/UEA/Oregon/gis/r_aws/2019_1_1_11T_B02.tif"
save_object(object= obj[[1]], file = fn)
save_object(object= obj[[1]], file = fn,key = key_id, secret = secret, region = region)
r <- raster::raster(fn)
obj <- get_bucket(bucket = "sentinel-s2-l2a-mosaic-120", max = 100, prefix = "11T", delimiter = "/",
key = key_id, secret = secret, region = region)
obj[1:10]
obj <- get_bucket(bucket = "sentinel-s2-l2a-mosaic-120", max = 10,
key = key_id, secret = secret, region = region)
obj[1:10]
obj <- get_bucket(bucket = "sentinel-s2-l2a-mosaic-120", max = 10, StartAfter = "2019/1/1/11T/B02.tif",
key = key_id, secret = secret, region = region)
obj[1:10]
obj <- get_bucket(bucket = "sentinel-s2-l2a-mosaic-120", max = 10, prefix = "2019/1/1/11T",
key = key_id, secret = secret, region = region)
obj[1:10]
pts.sf$SiteName
mv1 <- mapview::mapview(pts.sf, zcol = vars, label= pts.sf$SiteName, homebutton = FALSE,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = F)
mv1
mv1 <- mapview::mapview(pts.sf, zcol = vars, label= as.vector(pts.sf$SiteName), homebutton = FALSE,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = F)
mv1
vars <- c("SiteName", "clearcut","insideHJA","oldGrowthIndex", "elevation_m", "canopyHeight_m",
"precipitation_mm", "minT_annual", "maxT_annual", "mean.NDVI",
"Nss", "Ess", "ht.r500", "cov2_4.r500", "cov4_16.r500", "mTopo", "cut.r1k.pt")
mv1 <- mapview::mapview(pts.sf, zcol = vars, homebutton = FALSE,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = F)
mv1
labs <- pts.sf$SiteName
vars <- c("clearcut","insideHJA","oldGrowthIndex", "elevation_m", "canopyHeight_m",
"precipitation_mm", "minT_annual", "maxT_annual", "mean.NDVI",
"Nss", "Ess", "ht.r500", "cov2_4.r500", "cov4_16.r500", "mTopo", "cut.r1k.pt")
mv1 <- mapview::mapview(pts.sf, zcol = vars, labels = labs, homebutton = FALSE,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = F)
mv1
mv1 <- mapview::mapview(pts.sf, zcol = vars, label = labs, homebutton = FALSE,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = F)
mv1
vars <- c("SiteName", "clearcut","insideHJA","oldGrowthIndex", "elevation_m", "canopyHeight_m",
"precipitation_mm", "minT_annual", "maxT_annual", "mean.NDVI",
"Nss", "Ess", "ht.r500", "cov2_4.r500", "cov4_16.r500", "mTopo", "cut.r1k.pt")
mv1 <- mapview::mapview(pts.sf, zcol = vars, homebutton = FALSE,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = F)
mv1@map <- mv1@map %>% leaflet::hideGroup(group = vars[-1])
mv2 <- mapview::mapview(hja_bound, col.regions = "blue", alpha.regions = 0.2, label = FALSE,
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"), legend= F, homebutton = TRUE)
mv2
mv <- mv1 + mv2
mv
mapview::mapshot(mv, url = "pts_map.html", selfcontainted = TRUE)
